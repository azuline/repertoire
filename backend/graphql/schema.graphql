scalar PosixTime

type Query {
    artist(id: Int!): ArtistResult
    artistFromName(name: String!): ArtistResult
    collection(id: Int!): CollectionResult
    collectionFromNameAndType(name: String!, type: CollectionType): CollectionResult
    release(id: Int!): ReleaseResult
    track(id: Int!): TrackResult
    user: UserResult

    # TODO: Fetching multiples.
}

type Error {
    error: ErrorType!
    message: String!
}

type Artist {
    id: Int!
    name: String!
    favorite: Boolean!
    numReleases: Int!

    releases: [Release]
    topGenres: [TopGenre]
}

union ArtistResult = Artist | Error

type Collection {
    id: Int!
    name: String!
    favorite: Boolean!
    type: CollectionType!
    numReleases: Int
    lastUpdatedOn: PosixTime

    releases: [Release]
    topGenres: [TopGenre]
}

union CollectionResult = Collection | Error

type Release {
    id: Int!
    title: String!
    releaseType: ReleaseType!
    addedOn: PosixTime!
    inInbox: Boolean!
    releaseYear: Int!
    numTracks: Int!
    releaseDate: String
    imagePath: String

    artists: [Artist]
    tracks: [Track]
    genres: [Collection]
    labels: [Collection]
    collages: [Collection]
}

union ReleaseResult = Release | Error

type Track {
    id: Int!
    title: String!
    duration: Int!
    trackNumber: String!
    discNumber: String

    release: Release
    artists: [TrackArtist]
}

union TrackResult = Track | Error

type TrackArtist {
    role: ArtistRole!
    artist: Artist!
}

type TopGenre {
    genre: Collection!
    numMatches: Int!
}

type User {
    id: Int!
    username: String!
}

union UserResult = User | Error

enum ErrorType {
    NOT_AUTHENTICATED
    NOT_FOUND
}

enum ArtistRole {
    MAIN
    FEATURE
    REMIXER
    PRODUCER
    COMPOSER
    CONDUCTOR
    DJMIXER
}

enum ReleaseType {
    ALBUM
    SINGLE
    EP
    COMPILATION
    SOUNDTRACK
    SPOKENWORD
    LIVE
    REMIX
    DJMIX
    MIXTAPE
    OTHER
    UNKNOWN
}

enum CollectionType {
    SYSTEM
    COLLAGE
    LABEL
    GENRE
    RATING
}

enum ReleaseSort {
    RECENTLY_ADDED
    TITLE
    YEAR
    RANDOM
}
