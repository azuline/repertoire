start:
	QUART_DEBUG=1 QUART_APP="src.webserver.app:create_app()" poetry run quart run

# A parallel test execution.
test:
	poetry run pytest -n auto --cov=. --cov-branch src/
	poetry run coverage html

# A sequential test execution.
testseq:
	poetry run pytest --cov=. --cov-branch src/
	poetry run coverage html

typecheck:
	poetry run mypy src/

lintcheck:
	poetry run black --check src/
	poetry run isort -c src/
	poetry run flake8 src/

lint:
	poetry run black src/
	poetry run isort src/
	poetry run flake8 src/

schema:
	mkdir -p ../_data
	poetry run yoyo apply --batch
	printf -- "-- This file is for documentation purposes only.\n" > schema.sql
	printf -- "-- It is autogenerated from the migrations, please do NOT edit!\n\n" >> schema.sql
	sqlite3 ../_data/db.sqlite3 .schema | tail -n +5 | awk '{if (NR>1) gsub(/^CREATE/, "\nCREATE")}1' >> schema.sql

docs:
	rm -rf ../docs/_build/html ../docs/_build/doctrees
	poetry run sphinx-build -M html ../docs ../docs/_build

setupfiles:
	poetry export -f requirements.txt -o requirements.txt
	poetry run dephell deps convert --from pyproject.toml --to setup.py

.PHONY: start test testseq typecheck lintcheck lint schema docs setupfiles setupcheck
