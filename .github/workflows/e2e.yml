name: E2E

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  codecept:
    name: Codecept
    runs-on: ubuntu-latest
    env:
      CI: true
      DATA_PATH: ../data
      LD_LIBRARY_PATH: /usr/local/lib
    steps:
      - uses: actions/checkout@v2
      - name: Cache SQLite
        id: cache-sqlite
        uses: actions/cache@v2
        with:
          path: /tmp/sqlite
          key: ${{ runner.os }}-sqlite-2021-03-02
      - name: Build SQLite
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: ./.github/actions/build-sqlite
      - name: Install SQLite
        uses: ./.github/actions/install-sqlite
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'
      - name: Install Playwright
        uses: microsoft/playwright-github-action@v1
      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-1.1.4
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSl -vvv https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
      - name: Configure environment
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Cache backend dependencies
        id: cache-backend-deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/backend/poetry.lock') }}
      - name: Install backend dependencies
        if: steps.cache-backend-deps.outputs.cache-hit != 'true'
        run: poetry install
        working-directory: backend/
      - name: Cache frontend dependencies
        id: cache-frontend-deps
        uses: actions/cache@v2
        with:
          path: frontend/node_modules/
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/frontend/yarn.lock') }}
      - name: Install frontend dependencies
        if: steps.cache-frontend-deps.outputs.cache-hit != 'true'
        run: yarn install
        working-directory: frontend/
      - name: Cache codecept dependencies
        id: cache-test-deps
        uses: actions/cache@v2
        with:
          path: tests/node_modules/
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/tests/yarn.lock') }}
      - name: Install codecept dependencies
        if: steps.cache-test-deps.outputs.cache-hit != 'true'
        run: yarn install
        working-directory: tests/
      - name: Run e2e tests
        run: |
          cd backend/
          QUART_DEBUG=1 QUART_APP="src.webserver.app:create_app()" poetry run quart run &
          cd ../frontend/
          yarn wait-port -t 30 5000
          yarn start &
          cd ../tests/
          yarn wait-port -t 30 3000
          yarn codeceptjs run --steps
