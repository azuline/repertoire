name: Backend

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend/'
    env:
      LD_LIBRARY_PATH: /usr/local/lib
      DATA_PATH: ../data 
    steps:
      - uses: actions/checkout@v2
      - name: Cache SQLite
        id: cache-sqlite
        uses: actions/cache@v2
        with:
          path: /tmp/sqlite
          key: ${{ runner.os }}-sqlite-2021-03-02
      - name: Build SQLite
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: ./.github/actions/build-sqlite
      - name: Install SQLite
        uses: ./.github/actions/install-sqlite
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'
      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-therealpoetry-1.1.4
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSl -vvv https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
      - name: Configure environment
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-key: ${{ runner.os }}-poetry-
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install
      - name: Run tests
        run: poetry run pytest -n auto --cov-report=xml --cov=. --cov-branch tests/
      - name: Upload coverage
        run: bash <(curl -s https://codecov.io/bash) -cF python
  type_check:
    name: Type check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend/'
    env:
      LD_LIBRARY_PATH: /usr/local/lib
      DATA_PATH: ../data 
    steps:
      - uses: actions/checkout@v2
      - name: Cache SQLite
        id: cache-sqlite
        uses: actions/cache@v2
        with:
          path: /tmp/sqlite
          key: ${{ runner.os }}-sqlite-2021-03-02
      - name: Build SQLite
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: ./.github/actions/build-sqlite
      - name: Install SQLite
        uses: ./.github/actions/install-sqlite
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'
      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-therealpoetry-1.1.4
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSl -vvv https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
      - name: Configure environment
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-key: ${{ runner.os }}-poetry-
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install
      - name: Cache mypy cache
        id: cache-mypy
        uses: actions/cache@v2
        with:
          path: backend/.mypy_cache
          key: "${{ runner.os }}-mypy-${{ github.sha }}"
          restore-key: "${{ runner.os }}-mypy-"
      - name: Run type check
        run: make typecheck
  lint_check:
    name: Lint check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend/'
    env:
      LD_LIBRARY_PATH: /usr/local/lib
      DATA_PATH: ../data 
    steps:
      - uses: actions/checkout@v2
      - name: Cache SQLite
        id: cache-sqlite
        uses: actions/cache@v2
        with:
          path: /tmp/sqlite
          key: ${{ runner.os }}-sqlite-2021-03-02
      - name: Build SQLite
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: ./.github/actions/build-sqlite
      - name: Install SQLite
        uses: ./.github/actions/install-sqlite
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'
      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-therealpoetry-1.1.4
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSl -vvv https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
      - name: Configure environment
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-key: ${{ runner.os }}-poetry-
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install
      - name: Run lint check
        run: make lintcheck
  schema:
    name: Schema
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend/'
    env:
      LD_LIBRARY_PATH: /usr/local/lib
      DATA_PATH: ../data 
    steps:
      - uses: actions/checkout@v2
      - name: Cache SQLite
        id: cache-sqlite
        uses: actions/cache@v2
        with:
          path: /tmp/sqlite
          key: ${{ runner.os }}-sqlite-2021-03-02
      - name: Build SQLite
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: ./.github/actions/build-sqlite
      - name: Install SQLite
        uses: ./.github/actions/install-sqlite
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'
      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-therealpoetry-1.1.4
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSl -vvv https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
      - name: Configure environment
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-key: ${{ runner.os }}-poetry-
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install
      - name: Generate schema
        run: make schema
      - name: Diff
        run: git diff
      - name: Status
        run: git status
      - name: Compare
        run: bash -c '[[ -z $(git status -s) ]] || (exit 1)'
  setup_files:
    name: Setup files
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend/'
    env:
      LD_LIBRARY_PATH: /usr/local/lib
      DATA_PATH: ../data 
    steps:
      - uses: actions/checkout@v2
      - name: Cache SQLite
        id: cache-sqlite
        uses: actions/cache@v2
        with:
          path: /tmp/sqlite
          key: ${{ runner.os }}-sqlite-2021-03-02
      - name: Build SQLite
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: ./.github/actions/build-sqlite
      - name: Install SQLite
        uses: ./.github/actions/install-sqlite
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'
      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-therealpoetry-1.1.4
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSl -vvv https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
      - name: Configure environment
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-key: ${{ runner.os }}-poetry-
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install
      - name: Generate setup files
        run: make setupfiles
      - name: Diff
        run: git diff
      - name: Status
        run: git status
      - name: Compare
        run: bash -c '[[ -z $(git status -s) ]] || (exit 1)'
