name: Backend

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend/'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'
      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-1.1.4
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSl -vvv https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
      - name: Configure PATH
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Cache dependencies.
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies.
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install
      - name: Run tests
        run: poetry run pytest --cov-report=xml --cov=. --cov-branch tests/
      - name: Upload coverage
        run: bash <(curl -s https://codecov.io/bash) -cF python
  type_check:
    name: Type check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend/'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'
      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-1.1.4
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSl -vvv https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
      - name: Configure PATH
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Cache dependencies.
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies.
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install
      - name: Download mypy cache
        uses: actions/download-artifact@v2
        with:
            name: .mypy_cache
      - name: Run type check
        run: make typecheck
      - name: Upload mypy cache
        uses: actions/download-artifact@v2
        with:
            name: .mypy_cache
            path: .mypy_cache
  lint_check:
    name: Lint check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend/'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'
      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-1.1.4
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSl -vvv https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
      - name: Configure PATH
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Cache dependencies.
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies.
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install
      - name: Run lint check
        run: make lintcheck
  schema:
    name: Schema
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend/'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'
      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-1.1.4
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSl -vvv https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
      - name: Configure PATH
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Cache dependencies.
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies.
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install
      - name: Generate schema
        run: make schema
      - name: Diff
        run: git diff
      - name: Compare
        run: bash -c '[[ -z $(git status -s) ]] || (exit 1)'
  setupfiles:
    name: Setup files
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend/'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.1'
      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-1.1.4
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: curl -sSl -vvv https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
      - name: Configure PATH
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Cache dependencies.
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies.
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install
      - name: Generate setup files
        run: make setupfiles
      - name: Diff
        run: git diff
      - name: Compare
        run: bash -c '[[ -z $(git status -s) ]] || (exit 1)'
